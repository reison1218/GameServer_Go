// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.7.1
// source: proto_files/battle.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//游戏开始推送
//cmd:10022
type S_START_NOTICE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomStatus    uint32            `protobuf:"varint,1,opt,name=room_status,json=roomStatus,proto3" json:"room_status,omitempty"`         //房间状态
	TileMapId     uint32            `protobuf:"varint,2,opt,name=tile_map_id,json=tileMapId,proto3" json:"tile_map_id,omitempty"`          //地图配置id
	WorldCell     []*WorldCellPt    `protobuf:"bytes,3,rep,name=world_cell,json=worldCell,proto3" json:"world_cell,omitempty"`             //世界块
	TurnOrder     []uint32          `protobuf:"varint,4,rep,packed,name=turn_order,json=turnOrder,proto3" json:"turn_order,omitempty"`     //turn顺序
	BattlePlayers []*BattlePlayerPt `protobuf:"bytes,5,rep,name=battle_players,json=battlePlayers,proto3" json:"battle_players,omitempty"` //玩家战斗数据
}

func (x *S_START_NOTICE) Reset() {
	*x = S_START_NOTICE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_battle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S_START_NOTICE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S_START_NOTICE) ProtoMessage() {}

func (x *S_START_NOTICE) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_battle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S_START_NOTICE.ProtoReflect.Descriptor instead.
func (*S_START_NOTICE) Descriptor() ([]byte, []int) {
	return file_proto_files_battle_proto_rawDescGZIP(), []int{0}
}

func (x *S_START_NOTICE) GetRoomStatus() uint32 {
	if x != nil {
		return x.RoomStatus
	}
	return 0
}

func (x *S_START_NOTICE) GetTileMapId() uint32 {
	if x != nil {
		return x.TileMapId
	}
	return 0
}

func (x *S_START_NOTICE) GetWorldCell() []*WorldCellPt {
	if x != nil {
		return x.WorldCell
	}
	return nil
}

func (x *S_START_NOTICE) GetTurnOrder() []uint32 {
	if x != nil {
		return x.TurnOrder
	}
	return nil
}

func (x *S_START_NOTICE) GetBattlePlayers() []*BattlePlayerPt {
	if x != nil {
		return x.BattlePlayers
	}
	return nil
}

//选择位置请求
//cmd:30003
type C_CHOOSE_INDEX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index uint32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"` //位置下标
}

func (x *C_CHOOSE_INDEX) Reset() {
	*x = C_CHOOSE_INDEX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_battle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C_CHOOSE_INDEX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C_CHOOSE_INDEX) ProtoMessage() {}

func (x *C_CHOOSE_INDEX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_battle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C_CHOOSE_INDEX.ProtoReflect.Descriptor instead.
func (*C_CHOOSE_INDEX) Descriptor() ([]byte, []int) {
	return file_proto_files_battle_proto_rawDescGZIP(), []int{1}
}

func (x *C_CHOOSE_INDEX) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

//选择位置返回
//cmd:10023
type S_CHOOSE_INDEX struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSucc  bool   `protobuf:"varint,1,opt,name=is_succ,json=isSucc,proto3" json:"is_succ,omitempty"`   //是否成功;
	ErrMess string `protobuf:"bytes,2,opt,name=err_mess,json=errMess,proto3" json:"err_mess,omitempty"` //错误信息;
}

func (x *S_CHOOSE_INDEX) Reset() {
	*x = S_CHOOSE_INDEX{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_battle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S_CHOOSE_INDEX) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S_CHOOSE_INDEX) ProtoMessage() {}

func (x *S_CHOOSE_INDEX) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_battle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S_CHOOSE_INDEX.ProtoReflect.Descriptor instead.
func (*S_CHOOSE_INDEX) Descriptor() ([]byte, []int) {
	return file_proto_files_battle_proto_rawDescGZIP(), []int{2}
}

func (x *S_CHOOSE_INDEX) GetIsSucc() bool {
	if x != nil {
		return x.IsSucc
	}
	return false
}

func (x *S_CHOOSE_INDEX) GetErrMess() string {
	if x != nil {
		return x.ErrMess
	}
	return ""
}

//选择位置通知
//cmd:10025
type S_CHOOSE_INDEX_NOTICE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` //玩家id
	CterId uint32 `protobuf:"varint,2,opt,name=cter_id,json=cterId,proto3" json:"cter_id,omitempty"` //玩家的主要角色id
	Index  uint32 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`                 //玩家所选择的位置
}

func (x *S_CHOOSE_INDEX_NOTICE) Reset() {
	*x = S_CHOOSE_INDEX_NOTICE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_battle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S_CHOOSE_INDEX_NOTICE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S_CHOOSE_INDEX_NOTICE) ProtoMessage() {}

func (x *S_CHOOSE_INDEX_NOTICE) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_battle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S_CHOOSE_INDEX_NOTICE.ProtoReflect.Descriptor instead.
func (*S_CHOOSE_INDEX_NOTICE) Descriptor() ([]byte, []int) {
	return file_proto_files_battle_proto_rawDescGZIP(), []int{3}
}

func (x *S_CHOOSE_INDEX_NOTICE) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *S_CHOOSE_INDEX_NOTICE) GetCterId() uint32 {
	if x != nil {
		return x.CterId
	}
	return 0
}

func (x *S_CHOOSE_INDEX_NOTICE) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

//行动请求
//cmd=30004
type C_ACTION struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionType  uint32   `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`           //行动类型 可以是使用技能，可以是普通攻击,可以是使用道具
	Value       uint32   `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`                                       //行动对应类型的值
	TargetIndex []uint32 `protobuf:"varint,3,rep,packed,name=target_index,json=targetIndex,proto3" json:"target_index,omitempty"` //目标 可以是块，可以是玩家，可以是自己
}

func (x *C_ACTION) Reset() {
	*x = C_ACTION{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_battle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C_ACTION) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C_ACTION) ProtoMessage() {}

func (x *C_ACTION) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_battle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C_ACTION.ProtoReflect.Descriptor instead.
func (*C_ACTION) Descriptor() ([]byte, []int) {
	return file_proto_files_battle_proto_rawDescGZIP(), []int{4}
}

func (x *C_ACTION) GetActionType() uint32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *C_ACTION) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *C_ACTION) GetTargetIndex() []uint32 {
	if x != nil {
		return x.TargetIndex
	}
	return nil
}

//战斗开始通知
//cmd=10030
type S_BATTLE_START_NOTICE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BattlePlayers []*BattlePlayerPt `protobuf:"bytes,1,rep,name=battle_players,json=battlePlayers,proto3" json:"battle_players,omitempty"` //玩家战斗数据
	MapData       string            `protobuf:"bytes,2,opt,name=map_data,json=mapData,proto3" json:"map_data,omitempty"`                   //地图数据
}

func (x *S_BATTLE_START_NOTICE) Reset() {
	*x = S_BATTLE_START_NOTICE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_battle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S_BATTLE_START_NOTICE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S_BATTLE_START_NOTICE) ProtoMessage() {}

func (x *S_BATTLE_START_NOTICE) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_battle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S_BATTLE_START_NOTICE.ProtoReflect.Descriptor instead.
func (*S_BATTLE_START_NOTICE) Descriptor() ([]byte, []int) {
	return file_proto_files_battle_proto_rawDescGZIP(), []int{5}
}

func (x *S_BATTLE_START_NOTICE) GetBattlePlayers() []*BattlePlayerPt {
	if x != nil {
		return x.BattlePlayers
	}
	return nil
}

func (x *S_BATTLE_START_NOTICE) GetMapData() string {
	if x != nil {
		return x.MapData
	}
	return ""
}

//行动推送
//cmd=10031
type S_ACTION_NOTICE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionUints []*ActionUnitPt `protobuf:"bytes,1,rep,name=action_uints,json=actionUints,proto3" json:"action_uints,omitempty"` //行动单位
}

func (x *S_ACTION_NOTICE) Reset() {
	*x = S_ACTION_NOTICE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_battle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S_ACTION_NOTICE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S_ACTION_NOTICE) ProtoMessage() {}

func (x *S_ACTION_NOTICE) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_battle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S_ACTION_NOTICE.ProtoReflect.Descriptor instead.
func (*S_ACTION_NOTICE) Descriptor() ([]byte, []int) {
	return file_proto_files_battle_proto_rawDescGZIP(), []int{6}
}

func (x *S_ACTION_NOTICE) GetActionUints() []*ActionUnitPt {
	if x != nil {
		return x.ActionUints
	}
	return nil
}

//turn玩家状态结算，turn开始的时候
//cmd = 10032
type S_BATTLE_TURN_NOTICE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CycleCount    uint32            `protobuf:"varint,1,opt,name=cycle_count,json=cycleCount,proto3" json:"cycle_count,omitempty"`         //当前周期计数，用于白天黑夜
	UserId        uint32            `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                     //当前turn的玩家id
	BattlePlayers []*BattlePlayerPt `protobuf:"bytes,3,rep,name=battle_players,json=battlePlayers,proto3" json:"battle_players,omitempty"` //所有玩家战斗数据
	CellBuffs     []*CellBuffPt     `protobuf:"bytes,4,rep,name=cell_buffs,json=cellBuffs,proto3" json:"cell_buffs,omitempty"`             //地图块上的buff
}

func (x *S_BATTLE_TURN_NOTICE) Reset() {
	*x = S_BATTLE_TURN_NOTICE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_battle_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S_BATTLE_TURN_NOTICE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S_BATTLE_TURN_NOTICE) ProtoMessage() {}

func (x *S_BATTLE_TURN_NOTICE) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_battle_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S_BATTLE_TURN_NOTICE.ProtoReflect.Descriptor instead.
func (*S_BATTLE_TURN_NOTICE) Descriptor() ([]byte, []int) {
	return file_proto_files_battle_proto_rawDescGZIP(), []int{7}
}

func (x *S_BATTLE_TURN_NOTICE) GetCycleCount() uint32 {
	if x != nil {
		return x.CycleCount
	}
	return 0
}

func (x *S_BATTLE_TURN_NOTICE) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *S_BATTLE_TURN_NOTICE) GetBattlePlayers() []*BattlePlayerPt {
	if x != nil {
		return x.BattlePlayers
	}
	return nil
}

func (x *S_BATTLE_TURN_NOTICE) GetCellBuffs() []*CellBuffPt {
	if x != nil {
		return x.CellBuffs
	}
	return nil
}

//架势请求
//cmd = 30005
type C_POS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    uint32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`                      //1:切换架势，2:取消架势
	SkillId uint32 `protobuf:"varint,2,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"` //技能id
}

func (x *C_POS) Reset() {
	*x = C_POS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_battle_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C_POS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C_POS) ProtoMessage() {}

func (x *C_POS) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_battle_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C_POS.ProtoReflect.Descriptor instead.
func (*C_POS) Descriptor() ([]byte, []int) {
	return file_proto_files_battle_proto_rawDescGZIP(), []int{8}
}

func (x *C_POS) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *C_POS) GetSkillId() uint32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

//架势请求
//cmd = 10033
type S_POS_NOTICE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CterId  uint32 `protobuf:"varint,1,opt,name=cter_id,json=cterId,proto3" json:"cter_id,omitempty"`    //角色ID
	Type    uint32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`                      //1:切换架势，2:取消架势
	SkillId uint32 `protobuf:"varint,3,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"` //技能id
}

func (x *S_POS_NOTICE) Reset() {
	*x = S_POS_NOTICE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_battle_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S_POS_NOTICE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S_POS_NOTICE) ProtoMessage() {}

func (x *S_POS_NOTICE) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_battle_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S_POS_NOTICE.ProtoReflect.Descriptor instead.
func (*S_POS_NOTICE) Descriptor() ([]byte, []int) {
	return file_proto_files_battle_proto_rawDescGZIP(), []int{9}
}

func (x *S_POS_NOTICE) GetCterId() uint32 {
	if x != nil {
		return x.CterId
	}
	return 0
}

func (x *S_POS_NOTICE) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *S_POS_NOTICE) GetSkillId() uint32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

//地图刷新推送
//cmd = 10040
type S_MAP_REFRESH_NOTICE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomStatus uint32         `protobuf:"varint,1,opt,name=room_status,json=roomStatus,proto3" json:"room_status,omitempty"` //房间状态
	TileMapId  uint32         `protobuf:"varint,2,opt,name=tile_map_id,json=tileMapId,proto3" json:"tile_map_id,omitempty"`  //地图配置id
	WorldCell  []*WorldCellPt `protobuf:"bytes,3,rep,name=world_cell,json=worldCell,proto3" json:"world_cell,omitempty"`     //世界块
	IndexCters []*IndexCter   `protobuf:"bytes,4,rep,name=index_cters,json=indexCters,proto3" json:"index_cters,omitempty"`  //地图上先生成位置的角色
}

func (x *S_MAP_REFRESH_NOTICE) Reset() {
	*x = S_MAP_REFRESH_NOTICE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_battle_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S_MAP_REFRESH_NOTICE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S_MAP_REFRESH_NOTICE) ProtoMessage() {}

func (x *S_MAP_REFRESH_NOTICE) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_battle_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S_MAP_REFRESH_NOTICE.ProtoReflect.Descriptor instead.
func (*S_MAP_REFRESH_NOTICE) Descriptor() ([]byte, []int) {
	return file_proto_files_battle_proto_rawDescGZIP(), []int{10}
}

func (x *S_MAP_REFRESH_NOTICE) GetRoomStatus() uint32 {
	if x != nil {
		return x.RoomStatus
	}
	return 0
}

func (x *S_MAP_REFRESH_NOTICE) GetTileMapId() uint32 {
	if x != nil {
		return x.TileMapId
	}
	return 0
}

func (x *S_MAP_REFRESH_NOTICE) GetWorldCell() []*WorldCellPt {
	if x != nil {
		return x.WorldCell
	}
	return nil
}

func (x *S_MAP_REFRESH_NOTICE) GetIndexCters() []*IndexCter {
	if x != nil {
		return x.IndexCters
	}
	return nil
}

//结算推送
//cmd=10041
type S_SUMMARY_NOTICE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SummaryDatas []*SummaryDataPt `protobuf:"bytes,1,rep,name=summary_datas,json=summaryDatas,proto3" json:"summary_datas,omitempty"` //数据
}

func (x *S_SUMMARY_NOTICE) Reset() {
	*x = S_SUMMARY_NOTICE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_battle_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S_SUMMARY_NOTICE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S_SUMMARY_NOTICE) ProtoMessage() {}

func (x *S_SUMMARY_NOTICE) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_battle_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S_SUMMARY_NOTICE.ProtoReflect.Descriptor instead.
func (*S_SUMMARY_NOTICE) Descriptor() ([]byte, []int) {
	return file_proto_files_battle_proto_rawDescGZIP(), []int{11}
}

func (x *S_SUMMARY_NOTICE) GetSummaryDatas() []*SummaryDataPt {
	if x != nil {
		return x.SummaryDatas
	}
	return nil
}

//任务推送
//cmd=10101
type S_MISSION_NOTICE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             //玩家id
	MissionId  uint32 `protobuf:"varint,2,opt,name=mission_id,json=missionId,proto3" json:"mission_id,omitempty"`    //任务id
	NoticeType uint32 `protobuf:"varint,3,opt,name=notice_type,json=noticeType,proto3" json:"notice_type,omitempty"` //推送类型 1:玩家获得新任务,2:玩家完成任务（当为这个值的时候，所有玩家都会收到消息）
}

func (x *S_MISSION_NOTICE) Reset() {
	*x = S_MISSION_NOTICE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_battle_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S_MISSION_NOTICE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S_MISSION_NOTICE) ProtoMessage() {}

func (x *S_MISSION_NOTICE) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_battle_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S_MISSION_NOTICE.ProtoReflect.Descriptor instead.
func (*S_MISSION_NOTICE) Descriptor() ([]byte, []int) {
	return file_proto_files_battle_proto_rawDescGZIP(), []int{12}
}

func (x *S_MISSION_NOTICE) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *S_MISSION_NOTICE) GetMissionId() uint32 {
	if x != nil {
		return x.MissionId
	}
	return 0
}

func (x *S_MISSION_NOTICE) GetNoticeType() uint32 {
	if x != nil {
		return x.NoticeType
	}
	return 0
}

//购买
//cmd=30007
type C_BUY struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchandiseId uint32 `protobuf:"varint,1,opt,name=merchandise_id,json=merchandiseId,proto3" json:"merchandise_id,omitempty"` //商品id
}

func (x *C_BUY) Reset() {
	*x = C_BUY{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_battle_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *C_BUY) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C_BUY) ProtoMessage() {}

func (x *C_BUY) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_battle_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C_BUY.ProtoReflect.Descriptor instead.
func (*C_BUY) Descriptor() ([]byte, []int) {
	return file_proto_files_battle_proto_rawDescGZIP(), []int{13}
}

func (x *C_BUY) GetMerchandiseId() uint32 {
	if x != nil {
		return x.MerchandiseId
	}
	return 0
}

//购买推送
//cmd=10102
type S_BUY_NOTICE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        uint32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                      //玩家id
	MerchandiseId uint32 `protobuf:"varint,2,opt,name=merchandise_id,json=merchandiseId,proto3" json:"merchandise_id,omitempty"` //商品id
}

func (x *S_BUY_NOTICE) Reset() {
	*x = S_BUY_NOTICE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_battle_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S_BUY_NOTICE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S_BUY_NOTICE) ProtoMessage() {}

func (x *S_BUY_NOTICE) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_battle_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S_BUY_NOTICE.ProtoReflect.Descriptor instead.
func (*S_BUY_NOTICE) Descriptor() ([]byte, []int) {
	return file_proto_files_battle_proto_rawDescGZIP(), []int{14}
}

func (x *S_BUY_NOTICE) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *S_BUY_NOTICE) GetMerchandiseId() uint32 {
	if x != nil {
		return x.MerchandiseId
	}
	return 0
}

var File_proto_files_battle_proto protoreflect.FileDescriptor

var file_proto_files_battle_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x1a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe3, 0x01, 0x0a, 0x0e, 0x53,
	0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45, 0x12, 0x1f, 0x0a,
	0x0b, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e,
	0x0a, 0x0b, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6c, 0x65, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x32,
	0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6c,
	0x64, 0x43, 0x65, 0x6c, 0x6c, 0x50, 0x74, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x43, 0x65,
	0x6c, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x3d, 0x0a, 0x0e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50,
	0x74, 0x52, 0x0d, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x22, 0x26, 0x0a, 0x0e, 0x43, 0x5f, 0x43, 0x48, 0x4f, 0x4f, 0x53, 0x45, 0x5f, 0x49, 0x4e, 0x44,
	0x45, 0x58, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x44, 0x0a, 0x0e, 0x53, 0x5f, 0x43, 0x48,
	0x4f, 0x4f, 0x53, 0x45, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73,
	0x5f, 0x73, 0x75, 0x63, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53,
	0x75, 0x63, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x72, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x22, 0x5f,
	0x0a, 0x15, 0x53, 0x5f, 0x43, 0x48, 0x4f, 0x4f, 0x53, 0x45, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58,
	0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x64, 0x0a, 0x08, 0x43, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x71, 0x0a, 0x15, 0x53, 0x5f, 0x42, 0x41, 0x54, 0x54, 0x4c,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45, 0x12, 0x3d,
	0x0a, 0x0e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x74, 0x52, 0x0d,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x61, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4a, 0x0a, 0x0f, 0x53, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45, 0x12, 0x37, 0x0a, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x6e, 0x69, 0x74, 0x50, 0x74, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x69, 0x6e, 0x74, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x14, 0x53, 0x5f, 0x42, 0x41, 0x54, 0x54, 0x4c,
	0x45, 0x5f, 0x54, 0x55, 0x52, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0e, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x74, 0x52, 0x0d, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x63, 0x65, 0x6c, 0x6c, 0x5f, 0x62,
	0x75, 0x66, 0x66, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x42, 0x75, 0x66, 0x66, 0x50, 0x74, 0x52, 0x09,
	0x63, 0x65, 0x6c, 0x6c, 0x42, 0x75, 0x66, 0x66, 0x73, 0x22, 0x36, 0x0a, 0x05, 0x43, 0x5f, 0x50,
	0x4f, 0x53, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49,
	0x64, 0x22, 0x56, 0x0a, 0x0c, 0x53, 0x5f, 0x50, 0x4f, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x43,
	0x45, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x22, 0xbf, 0x01, 0x0a, 0x14, 0x53, 0x5f,
	0x4d, 0x41, 0x50, 0x5f, 0x52, 0x45, 0x46, 0x52, 0x45, 0x53, 0x48, 0x5f, 0x4e, 0x4f, 0x54, 0x49,
	0x43, 0x45, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6c, 0x65, 0x4d, 0x61,
	0x70, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x5f, 0x63, 0x65, 0x6c,
	0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x43, 0x65, 0x6c, 0x6c, 0x50, 0x74, 0x52, 0x09, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x32, 0x0a, 0x0b, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x74, 0x65, 0x72, 0x52,
	0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x74, 0x65, 0x72, 0x73, 0x22, 0x4e, 0x0a, 0x10, 0x53,
	0x5f, 0x53, 0x55, 0x4d, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45, 0x12,
	0x3a, 0x0a, 0x0d, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x50, 0x74, 0x52, 0x0c, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x73, 0x22, 0x6b, 0x0a, 0x10, 0x53,
	0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2e, 0x0a, 0x05, 0x43, 0x5f, 0x42, 0x55,
	0x59, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x0c, 0x53, 0x5f, 0x42, 0x55,
	0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x64, 0x69, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x6d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x64, 0x69, 0x73, 0x65, 0x49, 0x64, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_files_battle_proto_rawDescOnce sync.Once
	file_proto_files_battle_proto_rawDescData = file_proto_files_battle_proto_rawDesc
)

func file_proto_files_battle_proto_rawDescGZIP() []byte {
	file_proto_files_battle_proto_rawDescOnce.Do(func() {
		file_proto_files_battle_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_files_battle_proto_rawDescData)
	})
	return file_proto_files_battle_proto_rawDescData
}

var file_proto_files_battle_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_files_battle_proto_goTypes = []interface{}{
	(*S_START_NOTICE)(nil),        // 0: protos.S_START_NOTICE
	(*C_CHOOSE_INDEX)(nil),        // 1: protos.C_CHOOSE_INDEX
	(*S_CHOOSE_INDEX)(nil),        // 2: protos.S_CHOOSE_INDEX
	(*S_CHOOSE_INDEX_NOTICE)(nil), // 3: protos.S_CHOOSE_INDEX_NOTICE
	(*C_ACTION)(nil),              // 4: protos.C_ACTION
	(*S_BATTLE_START_NOTICE)(nil), // 5: protos.S_BATTLE_START_NOTICE
	(*S_ACTION_NOTICE)(nil),       // 6: protos.S_ACTION_NOTICE
	(*S_BATTLE_TURN_NOTICE)(nil),  // 7: protos.S_BATTLE_TURN_NOTICE
	(*C_POS)(nil),                 // 8: protos.C_POS
	(*S_POS_NOTICE)(nil),          // 9: protos.S_POS_NOTICE
	(*S_MAP_REFRESH_NOTICE)(nil),  // 10: protos.S_MAP_REFRESH_NOTICE
	(*S_SUMMARY_NOTICE)(nil),      // 11: protos.S_SUMMARY_NOTICE
	(*S_MISSION_NOTICE)(nil),      // 12: protos.S_MISSION_NOTICE
	(*C_BUY)(nil),                 // 13: protos.C_BUY
	(*S_BUY_NOTICE)(nil),          // 14: protos.S_BUY_NOTICE
	(*WorldCellPt)(nil),           // 15: protos.WorldCellPt
	(*BattlePlayerPt)(nil),        // 16: protos.BattlePlayerPt
	(*ActionUnitPt)(nil),          // 17: protos.ActionUnitPt
	(*CellBuffPt)(nil),            // 18: protos.CellBuffPt
	(*IndexCter)(nil),             // 19: protos.IndexCter
	(*SummaryDataPt)(nil),         // 20: protos.SummaryDataPt
}
var file_proto_files_battle_proto_depIdxs = []int32{
	15, // 0: protos.S_START_NOTICE.world_cell:type_name -> protos.WorldCellPt
	16, // 1: protos.S_START_NOTICE.battle_players:type_name -> protos.BattlePlayerPt
	16, // 2: protos.S_BATTLE_START_NOTICE.battle_players:type_name -> protos.BattlePlayerPt
	17, // 3: protos.S_ACTION_NOTICE.action_uints:type_name -> protos.ActionUnitPt
	16, // 4: protos.S_BATTLE_TURN_NOTICE.battle_players:type_name -> protos.BattlePlayerPt
	18, // 5: protos.S_BATTLE_TURN_NOTICE.cell_buffs:type_name -> protos.CellBuffPt
	15, // 6: protos.S_MAP_REFRESH_NOTICE.world_cell:type_name -> protos.WorldCellPt
	19, // 7: protos.S_MAP_REFRESH_NOTICE.index_cters:type_name -> protos.IndexCter
	20, // 8: protos.S_SUMMARY_NOTICE.summary_datas:type_name -> protos.SummaryDataPt
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_files_battle_proto_init() }
func file_proto_files_battle_proto_init() {
	if File_proto_files_battle_proto != nil {
		return
	}
	file_proto_files_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_files_battle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S_START_NOTICE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_battle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C_CHOOSE_INDEX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_battle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S_CHOOSE_INDEX); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_battle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S_CHOOSE_INDEX_NOTICE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_battle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C_ACTION); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_battle_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S_BATTLE_START_NOTICE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_battle_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S_ACTION_NOTICE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_battle_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S_BATTLE_TURN_NOTICE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_battle_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C_POS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_battle_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S_POS_NOTICE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_battle_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S_MAP_REFRESH_NOTICE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_battle_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S_SUMMARY_NOTICE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_battle_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S_MISSION_NOTICE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_battle_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*C_BUY); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_battle_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S_BUY_NOTICE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_files_battle_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_files_battle_proto_goTypes,
		DependencyIndexes: file_proto_files_battle_proto_depIdxs,
		MessageInfos:      file_proto_files_battle_proto_msgTypes,
	}.Build()
	File_proto_files_battle_proto = out.File
	file_proto_files_battle_proto_rawDesc = nil
	file_proto_files_battle_proto_goTypes = nil
	file_proto_files_battle_proto_depIdxs = nil
}
