// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.1
// source: proto_files/socket.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 指令类型
type CommandType int32

const (
	CommandType_CommandType_Unknow                             CommandType = 0  // 未知操作
	CommandType_CommandType_HandShake                          CommandType = 1  // 握手消息
	CommandType_CommandType_HandShakeResponse                  CommandType = 2  // 回应握手消息
	CommandType_CommandType_Keepalive                          CommandType = 3  // 心跳检查
	CommandType_CommandType_KeepaliveResponse                  CommandType = 4  // 回应心跳检查
	CommandType_CommandType_SendData                           CommandType = 5  // 数据发送
	CommandType_CommandType_ReportWorld                        CommandType = 6  // 上报游戏世界
	CommandType_CommandType_GMCommand                          CommandType = 7  // 发送GM指令
	CommandType_CommandType_GMCommandResponse                  CommandType = 8  // 回应GM指令
	CommandType_CommandType_HuoDongManager                     CommandType = 9  // 活动管理模块
	CommandType_CommandType_PortraitVerifyResult               CommandType = 10 // 头像审核结果
	CommandType_CommandType_BroadcastMsg                       CommandType = 11 // 渠道广播
	CommandType_CommandType_OperationEmail                     CommandType = 12 // 通用运营邮件
	CommandType_CommandType_OperationEmailResponse             CommandType = 13 // 通用运营邮件回发
	CommandType_CommandType_RunLuaScript                       CommandType = 14 // 通知服务器执行一段LUA指令
	CommandType_CommandType_UdpateActorNameResponse            CommandType = 15 //修改角色名回发
	CommandType_CommandType_OperationEmailResponseMultiple     CommandType = 16 // 通用运营邮件回发（多角色）
	CommandType_CommandType_DBHttpSubAction_Notity_AlbumVerify CommandType = 17 //图片审核结果
	CommandType_CommandType_PushGameConfig                     CommandType = 18 // 通用运营推送游戏配置
	CommandType_CommandType_PushGameConfigResponse             CommandType = 19 // 通用运营推送游戏配置回发
	CommandType_CommandType_PushGameConfigRequest              CommandType = 20 // 通用运营推送游戏配置起服请求
)

// Enum value maps for CommandType.
var (
	CommandType_name = map[int32]string{
		0:  "CommandType_Unknow",
		1:  "CommandType_HandShake",
		2:  "CommandType_HandShakeResponse",
		3:  "CommandType_Keepalive",
		4:  "CommandType_KeepaliveResponse",
		5:  "CommandType_SendData",
		6:  "CommandType_ReportWorld",
		7:  "CommandType_GMCommand",
		8:  "CommandType_GMCommandResponse",
		9:  "CommandType_HuoDongManager",
		10: "CommandType_PortraitVerifyResult",
		11: "CommandType_BroadcastMsg",
		12: "CommandType_OperationEmail",
		13: "CommandType_OperationEmailResponse",
		14: "CommandType_RunLuaScript",
		15: "CommandType_UdpateActorNameResponse",
		16: "CommandType_OperationEmailResponseMultiple",
		17: "CommandType_DBHttpSubAction_Notity_AlbumVerify",
		18: "CommandType_PushGameConfig",
		19: "CommandType_PushGameConfigResponse",
		20: "CommandType_PushGameConfigRequest",
	}
	CommandType_value = map[string]int32{
		"CommandType_Unknow":                             0,
		"CommandType_HandShake":                          1,
		"CommandType_HandShakeResponse":                  2,
		"CommandType_Keepalive":                          3,
		"CommandType_KeepaliveResponse":                  4,
		"CommandType_SendData":                           5,
		"CommandType_ReportWorld":                        6,
		"CommandType_GMCommand":                          7,
		"CommandType_GMCommandResponse":                  8,
		"CommandType_HuoDongManager":                     9,
		"CommandType_PortraitVerifyResult":               10,
		"CommandType_BroadcastMsg":                       11,
		"CommandType_OperationEmail":                     12,
		"CommandType_OperationEmailResponse":             13,
		"CommandType_RunLuaScript":                       14,
		"CommandType_UdpateActorNameResponse":            15,
		"CommandType_OperationEmailResponseMultiple":     16,
		"CommandType_DBHttpSubAction_Notity_AlbumVerify": 17,
		"CommandType_PushGameConfig":                     18,
		"CommandType_PushGameConfigResponse":             19,
		"CommandType_PushGameConfigRequest":              20,
	}
)

func (x CommandType) Enum() *CommandType {
	p := new(CommandType)
	*p = x
	return p
}

func (x CommandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_files_socket_proto_enumTypes[0].Descriptor()
}

func (CommandType) Type() protoreflect.EnumType {
	return &file_proto_files_socket_proto_enumTypes[0]
}

func (x CommandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CommandType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CommandType(num)
	return nil
}

// Deprecated: Use CommandType.Descriptor instead.
func (CommandType) EnumDescriptor() ([]byte, []int) {
	return file_proto_files_socket_proto_rawDescGZIP(), []int{0}
}

// 公共消息包头
type TMSG_HEADER struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID  *uint32      `protobuf:"varint,1,req,name=gameID" json:"gameID,omitempty"`                           // 游戏ID
	WorldID *uint32      `protobuf:"varint,2,req,name=worldID" json:"worldID,omitempty"`                         // 游戏世界ID
	Command *CommandType `protobuf:"varint,3,req,name=Command,enum=protos.CommandType" json:"Command,omitempty"` //指令
	SubCode *uint32      `protobuf:"varint,4,opt,name=SubCode" json:"SubCode,omitempty"`                         //子类型
}

func (x *TMSG_HEADER) Reset() {
	*x = TMSG_HEADER{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_socket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMSG_HEADER) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMSG_HEADER) ProtoMessage() {}

func (x *TMSG_HEADER) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_socket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMSG_HEADER.ProtoReflect.Descriptor instead.
func (*TMSG_HEADER) Descriptor() ([]byte, []int) {
	return file_proto_files_socket_proto_rawDescGZIP(), []int{0}
}

func (x *TMSG_HEADER) GetGameID() uint32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *TMSG_HEADER) GetWorldID() uint32 {
	if x != nil && x.WorldID != nil {
		return *x.WorldID
	}
	return 0
}

func (x *TMSG_HEADER) GetCommand() CommandType {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return CommandType_CommandType_Unknow
}

func (x *TMSG_HEADER) GetSubCode() uint32 {
	if x != nil && x.SubCode != nil {
		return *x.SubCode
	}
	return 0
}

// 握手请求 游戏 -> 平台
type TMSG_HANDSHAKE_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID   *uint32  `protobuf:"varint,1,req,name=gameID" json:"gameID,omitempty"`     // 游戏ID
	WorldIDs []uint32 `protobuf:"varint,2,rep,name=worldIDs" json:"worldIDs,omitempty"` // 游戏世界ID列表
}

func (x *TMSG_HANDSHAKE_REQ) Reset() {
	*x = TMSG_HANDSHAKE_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_socket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMSG_HANDSHAKE_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMSG_HANDSHAKE_REQ) ProtoMessage() {}

func (x *TMSG_HANDSHAKE_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_socket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMSG_HANDSHAKE_REQ.ProtoReflect.Descriptor instead.
func (*TMSG_HANDSHAKE_REQ) Descriptor() ([]byte, []int) {
	return file_proto_files_socket_proto_rawDescGZIP(), []int{1}
}

func (x *TMSG_HANDSHAKE_REQ) GetGameID() uint32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *TMSG_HANDSHAKE_REQ) GetWorldIDs() []uint32 {
	if x != nil {
		return x.WorldIDs
	}
	return nil
}

// 握手响应 平台 -> 游戏
type TMSG_HANDSHAKE_RSP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameID       *uint32 `protobuf:"varint,1,req,name=gameID" json:"gameID,omitempty"`             // 游戏ID
	SessionIndex *uint32 `protobuf:"varint,2,req,name=sessionIndex" json:"sessionIndex,omitempty"` // 连接流水号
}

func (x *TMSG_HANDSHAKE_RSP) Reset() {
	*x = TMSG_HANDSHAKE_RSP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_socket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMSG_HANDSHAKE_RSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMSG_HANDSHAKE_RSP) ProtoMessage() {}

func (x *TMSG_HANDSHAKE_RSP) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_socket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMSG_HANDSHAKE_RSP.ProtoReflect.Descriptor instead.
func (*TMSG_HANDSHAKE_RSP) Descriptor() ([]byte, []int) {
	return file_proto_files_socket_proto_rawDescGZIP(), []int{2}
}

func (x *TMSG_HANDSHAKE_RSP) GetGameID() uint32 {
	if x != nil && x.GameID != nil {
		return *x.GameID
	}
	return 0
}

func (x *TMSG_HANDSHAKE_RSP) GetSessionIndex() uint32 {
	if x != nil && x.SessionIndex != nil {
		return *x.SessionIndex
	}
	return 0
}

// 心跳响应 平台 -> 游戏
type TMSG_KEEPALIVE_RSP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *uint64 `protobuf:"varint,1,req,name=timestamp" json:"timestamp,omitempty"` // Unix时间戳
}

func (x *TMSG_KEEPALIVE_RSP) Reset() {
	*x = TMSG_KEEPALIVE_RSP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_socket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMSG_KEEPALIVE_RSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMSG_KEEPALIVE_RSP) ProtoMessage() {}

func (x *TMSG_KEEPALIVE_RSP) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_socket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMSG_KEEPALIVE_RSP.ProtoReflect.Descriptor instead.
func (*TMSG_KEEPALIVE_RSP) Descriptor() ([]byte, []int) {
	return file_proto_files_socket_proto_rawDescGZIP(), []int{3}
}

func (x *TMSG_KEEPALIVE_RSP) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

// 发送邮件附件   平台 -> 游戏
type TMSG_OPERATION_EMAIL_ATTACHMENT_PACKAGE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GoodsId  *uint32 `protobuf:"varint,1,req,name=goodsId" json:"goodsId,omitempty"`   // 物品标识
	GoodsNum *uint32 `protobuf:"varint,2,req,name=goodsNum" json:"goodsNum,omitempty"` // 物品数量
}

func (x *TMSG_OPERATION_EMAIL_ATTACHMENT_PACKAGE) Reset() {
	*x = TMSG_OPERATION_EMAIL_ATTACHMENT_PACKAGE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_socket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMSG_OPERATION_EMAIL_ATTACHMENT_PACKAGE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMSG_OPERATION_EMAIL_ATTACHMENT_PACKAGE) ProtoMessage() {}

func (x *TMSG_OPERATION_EMAIL_ATTACHMENT_PACKAGE) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_socket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMSG_OPERATION_EMAIL_ATTACHMENT_PACKAGE.ProtoReflect.Descriptor instead.
func (*TMSG_OPERATION_EMAIL_ATTACHMENT_PACKAGE) Descriptor() ([]byte, []int) {
	return file_proto_files_socket_proto_rawDescGZIP(), []int{4}
}

func (x *TMSG_OPERATION_EMAIL_ATTACHMENT_PACKAGE) GetGoodsId() uint32 {
	if x != nil && x.GoodsId != nil {
		return *x.GoodsId
	}
	return 0
}

func (x *TMSG_OPERATION_EMAIL_ATTACHMENT_PACKAGE) GetGoodsNum() uint32 {
	if x != nil && x.GoodsNum != nil {
		return *x.GoodsNum
	}
	return 0
}

// 发送邮件数据   平台 -> 游戏
type TMSG_OPERATION_EMAIL_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailId       *string                                    `protobuf:"bytes,1,req,name=emailId" json:"emailId,omitempty"`              // 邮件标识
	Channels      []uint32                                   `protobuf:"varint,2,rep,name=channels" json:"channels,omitempty"`           // 渠道列表
	AddresseeType *uint32                                    `protobuf:"varint,3,req,name=addresseeType" json:"addresseeType,omitempty"` // 收件人类型(1:所有角色,2:指定角色)
	Addressees    []uint64                                   `protobuf:"varint,4,rep,name=addressees" json:"addressees,omitempty"`       // 收件人列表(角色标识)
	EmailTopic    *string                                    `protobuf:"bytes,5,req,name=emailTopic" json:"emailTopic,omitempty"`        // 邮件标题
	EmailText     *string                                    `protobuf:"bytes,6,req,name=emailText" json:"emailText,omitempty"`          // 邮件内容
	Attachments   []*TMSG_OPERATION_EMAIL_ATTACHMENT_PACKAGE `protobuf:"bytes,7,rep,name=attachments" json:"attachments,omitempty"`      // 邮件附件
	PersistDays   *uint32                                    `protobuf:"varint,8,req,name=persistDays" json:"persistDays,omitempty"`     // 保留天数
	Creator       *string                                    `protobuf:"bytes,9,req,name=creator" json:"creator,omitempty"`              // 创建人
	CreateTime    *uint64                                    `protobuf:"varint,10,req,name=createTime" json:"createTime,omitempty"`      // 创建时间
	ExpireTime    *uint64                                    `protobuf:"varint,11,opt,name=expireTime" json:"expireTime,omitempty"`      // 发送截止时间
}

func (x *TMSG_OPERATION_EMAIL_REQ) Reset() {
	*x = TMSG_OPERATION_EMAIL_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_socket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMSG_OPERATION_EMAIL_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMSG_OPERATION_EMAIL_REQ) ProtoMessage() {}

func (x *TMSG_OPERATION_EMAIL_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_socket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMSG_OPERATION_EMAIL_REQ.ProtoReflect.Descriptor instead.
func (*TMSG_OPERATION_EMAIL_REQ) Descriptor() ([]byte, []int) {
	return file_proto_files_socket_proto_rawDescGZIP(), []int{5}
}

func (x *TMSG_OPERATION_EMAIL_REQ) GetEmailId() string {
	if x != nil && x.EmailId != nil {
		return *x.EmailId
	}
	return ""
}

func (x *TMSG_OPERATION_EMAIL_REQ) GetChannels() []uint32 {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *TMSG_OPERATION_EMAIL_REQ) GetAddresseeType() uint32 {
	if x != nil && x.AddresseeType != nil {
		return *x.AddresseeType
	}
	return 0
}

func (x *TMSG_OPERATION_EMAIL_REQ) GetAddressees() []uint64 {
	if x != nil {
		return x.Addressees
	}
	return nil
}

func (x *TMSG_OPERATION_EMAIL_REQ) GetEmailTopic() string {
	if x != nil && x.EmailTopic != nil {
		return *x.EmailTopic
	}
	return ""
}

func (x *TMSG_OPERATION_EMAIL_REQ) GetEmailText() string {
	if x != nil && x.EmailText != nil {
		return *x.EmailText
	}
	return ""
}

func (x *TMSG_OPERATION_EMAIL_REQ) GetAttachments() []*TMSG_OPERATION_EMAIL_ATTACHMENT_PACKAGE {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *TMSG_OPERATION_EMAIL_REQ) GetPersistDays() uint32 {
	if x != nil && x.PersistDays != nil {
		return *x.PersistDays
	}
	return 0
}

func (x *TMSG_OPERATION_EMAIL_REQ) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

func (x *TMSG_OPERATION_EMAIL_REQ) GetCreateTime() uint64 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *TMSG_OPERATION_EMAIL_REQ) GetExpireTime() uint64 {
	if x != nil && x.ExpireTime != nil {
		return *x.ExpireTime
	}
	return 0
}

// 发送邮件回发(单角色)   游戏 -> 平台
type TMSG_OPERATION_EMAIL_RSP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailId    *string `protobuf:"bytes,1,opt,name=emailId" json:"emailId,omitempty"`       // 邮件标识
	ActorId    *uint64 `protobuf:"varint,2,req,name=actorId" json:"actorId,omitempty"`      // 角色标识
	ActorName  *string `protobuf:"bytes,3,req,name=actorName" json:"actorName,omitempty"`   // 角色名称
	Status     *uint32 `protobuf:"varint,4,req,name=status" json:"status,omitempty"`        // 邮件状态(8:发送成功,16:发送失败,32:已读,64:已领取附件,128:已删除)
	RelationId *string `protobuf:"bytes,5,opt,name=relationId" json:"relationId,omitempty"` // 关联标识（游戏内邮件ID）
}

func (x *TMSG_OPERATION_EMAIL_RSP) Reset() {
	*x = TMSG_OPERATION_EMAIL_RSP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_socket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMSG_OPERATION_EMAIL_RSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMSG_OPERATION_EMAIL_RSP) ProtoMessage() {}

func (x *TMSG_OPERATION_EMAIL_RSP) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_socket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMSG_OPERATION_EMAIL_RSP.ProtoReflect.Descriptor instead.
func (*TMSG_OPERATION_EMAIL_RSP) Descriptor() ([]byte, []int) {
	return file_proto_files_socket_proto_rawDescGZIP(), []int{6}
}

func (x *TMSG_OPERATION_EMAIL_RSP) GetEmailId() string {
	if x != nil && x.EmailId != nil {
		return *x.EmailId
	}
	return ""
}

func (x *TMSG_OPERATION_EMAIL_RSP) GetActorId() uint64 {
	if x != nil && x.ActorId != nil {
		return *x.ActorId
	}
	return 0
}

func (x *TMSG_OPERATION_EMAIL_RSP) GetActorName() string {
	if x != nil && x.ActorName != nil {
		return *x.ActorName
	}
	return ""
}

func (x *TMSG_OPERATION_EMAIL_RSP) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *TMSG_OPERATION_EMAIL_RSP) GetRelationId() string {
	if x != nil && x.RelationId != nil {
		return *x.RelationId
	}
	return ""
}

// 发送邮件回发同状态(多角色)   游戏 -> 平台
type TMSG_OPERATION_EMAIL_RSP_MULTI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailId *string                           `protobuf:"bytes,1,opt,name=emailId" json:"emailId,omitempty"` // 邮件标识（如果游戏内回发发送成功/失败状态时传入了relationId关联游戏内邮件标识，那么回发其他状态时不一定要传入此参数）
	Status  *uint32                           `protobuf:"varint,2,req,name=status" json:"status,omitempty"`  // 邮件状态(8:发送成功,16:发送失败,32:已读,64:已领取附件,128:已删除)
	Actors  []*TMSG_OPERATION_EMAIL_RSP_ACTOR `protobuf:"bytes,3,rep,name=actors" json:"actors,omitempty"`   // 角色邮件信息
}

func (x *TMSG_OPERATION_EMAIL_RSP_MULTI) Reset() {
	*x = TMSG_OPERATION_EMAIL_RSP_MULTI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_socket_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMSG_OPERATION_EMAIL_RSP_MULTI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMSG_OPERATION_EMAIL_RSP_MULTI) ProtoMessage() {}

func (x *TMSG_OPERATION_EMAIL_RSP_MULTI) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_socket_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMSG_OPERATION_EMAIL_RSP_MULTI.ProtoReflect.Descriptor instead.
func (*TMSG_OPERATION_EMAIL_RSP_MULTI) Descriptor() ([]byte, []int) {
	return file_proto_files_socket_proto_rawDescGZIP(), []int{7}
}

func (x *TMSG_OPERATION_EMAIL_RSP_MULTI) GetEmailId() string {
	if x != nil && x.EmailId != nil {
		return *x.EmailId
	}
	return ""
}

func (x *TMSG_OPERATION_EMAIL_RSP_MULTI) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *TMSG_OPERATION_EMAIL_RSP_MULTI) GetActors() []*TMSG_OPERATION_EMAIL_RSP_ACTOR {
	if x != nil {
		return x.Actors
	}
	return nil
}

type TMSG_OPERATION_EMAIL_RSP_ACTOR struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorId    *uint64 `protobuf:"varint,1,req,name=actorId" json:"actorId,omitempty"`      // 角色标识
	ActorName  *string `protobuf:"bytes,2,req,name=actorName" json:"actorName,omitempty"`   // 角色名称
	RelationId *string `protobuf:"bytes,3,opt,name=relationId" json:"relationId,omitempty"` // 关联标识（游戏或游戏世界内邮件唯一ID，如果游戏内回发所有状态时不能都回发我方emailId，那么需要必传此参数）
}

func (x *TMSG_OPERATION_EMAIL_RSP_ACTOR) Reset() {
	*x = TMSG_OPERATION_EMAIL_RSP_ACTOR{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_files_socket_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TMSG_OPERATION_EMAIL_RSP_ACTOR) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TMSG_OPERATION_EMAIL_RSP_ACTOR) ProtoMessage() {}

func (x *TMSG_OPERATION_EMAIL_RSP_ACTOR) ProtoReflect() protoreflect.Message {
	mi := &file_proto_files_socket_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TMSG_OPERATION_EMAIL_RSP_ACTOR.ProtoReflect.Descriptor instead.
func (*TMSG_OPERATION_EMAIL_RSP_ACTOR) Descriptor() ([]byte, []int) {
	return file_proto_files_socket_proto_rawDescGZIP(), []int{8}
}

func (x *TMSG_OPERATION_EMAIL_RSP_ACTOR) GetActorId() uint64 {
	if x != nil && x.ActorId != nil {
		return *x.ActorId
	}
	return 0
}

func (x *TMSG_OPERATION_EMAIL_RSP_ACTOR) GetActorName() string {
	if x != nil && x.ActorName != nil {
		return *x.ActorName
	}
	return ""
}

func (x *TMSG_OPERATION_EMAIL_RSP_ACTOR) GetRelationId() string {
	if x != nil && x.RelationId != nil {
		return *x.RelationId
	}
	return ""
}

var File_proto_files_socket_proto protoreflect.FileDescriptor

var file_proto_files_socket_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x2f, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x0b, 0x54, 0x4d, 0x53, 0x47, 0x5f, 0x48, 0x45, 0x41, 0x44,
	0x45, 0x52, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x49, 0x44, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x49, 0x44, 0x12, 0x2d, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x53, 0x75, 0x62, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x48, 0x0a,
	0x12, 0x54, 0x4d, 0x53, 0x47, 0x5f, 0x48, 0x41, 0x4e, 0x44, 0x53, 0x48, 0x41, 0x4b, 0x45, 0x5f,
	0x52, 0x45, 0x51, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x49, 0x44, 0x73, 0x22, 0x50, 0x0a, 0x12, 0x54, 0x4d, 0x53, 0x47, 0x5f,
	0x48, 0x41, 0x4e, 0x44, 0x53, 0x48, 0x41, 0x4b, 0x45, 0x5f, 0x52, 0x53, 0x50, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x67,
	0x61, 0x6d, 0x65, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x32, 0x0a, 0x12, 0x54, 0x4d, 0x53,
	0x47, 0x5f, 0x4b, 0x45, 0x45, 0x50, 0x41, 0x4c, 0x49, 0x56, 0x45, 0x5f, 0x52, 0x53, 0x50, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x5f, 0x0a,
	0x27, 0x54, 0x4d, 0x53, 0x47, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x75, 0x6d, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4e, 0x75, 0x6d, 0x22, 0xa3,
	0x03, 0x0a, 0x18, 0x54, 0x4d, 0x53, 0x47, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x65, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x05, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x54, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x54, 0x65, 0x78, 0x74, 0x12, 0x51, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x54, 0x4d, 0x53, 0x47, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x41, 0x54, 0x54, 0x41, 0x43, 0x48, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x52, 0x0b, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x44, 0x61, 0x79, 0x73, 0x18, 0x08, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x0b, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x44, 0x61, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x02, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x18, 0x54, 0x4d, 0x53, 0x47, 0x5f, 0x4f, 0x50,
	0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x52, 0x53,
	0x50, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x07, 0x61, 0x63,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x92, 0x01, 0x0a, 0x1e,
	0x54, 0x4d, 0x53, 0x47, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45,
	0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x3e, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x4d, 0x53, 0x47, 0x5f, 0x4f,
	0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x52,
	0x53, 0x50, 0x5f, 0x41, 0x43, 0x54, 0x4f, 0x52, 0x52, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73,
	0x22, 0x78, 0x0a, 0x1e, 0x54, 0x4d, 0x53, 0x47, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x41, 0x43, 0x54,
	0x4f, 0x52, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x04, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x2a, 0xdc, 0x05, 0x0a, 0x0b, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x48, 0x61, 0x6e, 0x64, 0x53, 0x68, 0x61, 0x6b, 0x65, 0x10, 0x01, 0x12, 0x21, 0x0a,
	0x1d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x48, 0x61, 0x6e,
	0x64, 0x53, 0x68, 0x61, 0x6b, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x02,
	0x12, 0x19, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x4b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x1d, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4b, 0x65, 0x65, 0x70, 0x61,
	0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x04, 0x12, 0x18,
	0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x53, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x10, 0x05, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x57, 0x6f,
	0x72, 0x6c, 0x64, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x5f, 0x47, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x10, 0x07,
	0x12, 0x21, 0x0a, 0x1d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f,
	0x47, 0x4d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x10, 0x08, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x48, 0x75, 0x6f, 0x44, 0x6f, 0x6e, 0x67, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x10, 0x09, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x50, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x10, 0x0a, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x4d, 0x73, 0x67, 0x10, 0x0b, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x10, 0x0c, 0x12, 0x26, 0x0a, 0x22, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x0d, 0x12,
	0x1c, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x52,
	0x75, 0x6e, 0x4c, 0x75, 0x61, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x10, 0x0e, 0x12, 0x27, 0x0a,
	0x23, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x55, 0x64, 0x70,
	0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x10, 0x0f, 0x12, 0x2e, 0x0a, 0x2a, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x10, 0x10, 0x12, 0x32, 0x0a, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x44, 0x42, 0x48, 0x74, 0x74, 0x70, 0x53, 0x75, 0x62, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x4e, 0x6f, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x41, 0x6c, 0x62,
	0x75, 0x6d, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x10, 0x11, 0x12, 0x1e, 0x0a, 0x1a, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x50, 0x75, 0x73, 0x68, 0x47, 0x61,
	0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x10, 0x12, 0x12, 0x26, 0x0a, 0x22, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x50, 0x75, 0x73, 0x68, 0x47, 0x61,
	0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x10, 0x13, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x5f, 0x50, 0x75, 0x73, 0x68, 0x47, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x14, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x3b,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
}

var (
	file_proto_files_socket_proto_rawDescOnce sync.Once
	file_proto_files_socket_proto_rawDescData = file_proto_files_socket_proto_rawDesc
)

func file_proto_files_socket_proto_rawDescGZIP() []byte {
	file_proto_files_socket_proto_rawDescOnce.Do(func() {
		file_proto_files_socket_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_files_socket_proto_rawDescData)
	})
	return file_proto_files_socket_proto_rawDescData
}

var file_proto_files_socket_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_files_socket_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_files_socket_proto_goTypes = []interface{}{
	(CommandType)(0),                                // 0: protos.CommandType
	(*TMSG_HEADER)(nil),                             // 1: protos.TMSG_HEADER
	(*TMSG_HANDSHAKE_REQ)(nil),                      // 2: protos.TMSG_HANDSHAKE_REQ
	(*TMSG_HANDSHAKE_RSP)(nil),                      // 3: protos.TMSG_HANDSHAKE_RSP
	(*TMSG_KEEPALIVE_RSP)(nil),                      // 4: protos.TMSG_KEEPALIVE_RSP
	(*TMSG_OPERATION_EMAIL_ATTACHMENT_PACKAGE)(nil), // 5: protos.TMSG_OPERATION_EMAIL_ATTACHMENT_PACKAGE
	(*TMSG_OPERATION_EMAIL_REQ)(nil),                // 6: protos.TMSG_OPERATION_EMAIL_REQ
	(*TMSG_OPERATION_EMAIL_RSP)(nil),                // 7: protos.TMSG_OPERATION_EMAIL_RSP
	(*TMSG_OPERATION_EMAIL_RSP_MULTI)(nil),          // 8: protos.TMSG_OPERATION_EMAIL_RSP_MULTI
	(*TMSG_OPERATION_EMAIL_RSP_ACTOR)(nil),          // 9: protos.TMSG_OPERATION_EMAIL_RSP_ACTOR
}
var file_proto_files_socket_proto_depIdxs = []int32{
	0, // 0: protos.TMSG_HEADER.Command:type_name -> protos.CommandType
	5, // 1: protos.TMSG_OPERATION_EMAIL_REQ.attachments:type_name -> protos.TMSG_OPERATION_EMAIL_ATTACHMENT_PACKAGE
	9, // 2: protos.TMSG_OPERATION_EMAIL_RSP_MULTI.actors:type_name -> protos.TMSG_OPERATION_EMAIL_RSP_ACTOR
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_files_socket_proto_init() }
func file_proto_files_socket_proto_init() {
	if File_proto_files_socket_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_files_socket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMSG_HEADER); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_socket_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMSG_HANDSHAKE_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_socket_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMSG_HANDSHAKE_RSP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_socket_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMSG_KEEPALIVE_RSP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_socket_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMSG_OPERATION_EMAIL_ATTACHMENT_PACKAGE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_socket_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMSG_OPERATION_EMAIL_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_socket_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMSG_OPERATION_EMAIL_RSP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_socket_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMSG_OPERATION_EMAIL_RSP_MULTI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_files_socket_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TMSG_OPERATION_EMAIL_RSP_ACTOR); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_files_socket_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_files_socket_proto_goTypes,
		DependencyIndexes: file_proto_files_socket_proto_depIdxs,
		EnumInfos:         file_proto_files_socket_proto_enumTypes,
		MessageInfos:      file_proto_files_socket_proto_msgTypes,
	}.Build()
	File_proto_files_socket_proto = out.File
	file_proto_files_socket_proto_rawDesc = nil
	file_proto_files_socket_proto_goTypes = nil
	file_proto_files_socket_proto_depIdxs = nil
}
